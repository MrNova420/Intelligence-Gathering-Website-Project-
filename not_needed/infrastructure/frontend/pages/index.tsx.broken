import Head from 'next/head'
import { useState, useEffect, useRef } from 'react'
import { 
  Search, Shield, Target, Zap, Users, BarChart3, Lock, Globe, 
  TrendingUp, Calendar, FileText, Download, Eye, Clock, 
  AlertTriangle, CheckCircle, XCircle, Activity, Database,
  Filter, Settings, Bell, User, LogOut, ChevronDown, Plus,
  Map, Smartphone, Mail, Link as LinkIcon, Image, Network,
  Brain, Radar, Fingerprint, Crosshair, Star, ArrowRight,
  Play, Pause, Volume2, ChevronLeft, ChevronRight, Quote,
  Award, Layers, Cpu, Cloud, GitBranch, Workflow, Zap as ZapIcon,
  MousePointer, Sparkles, Shield as ShieldIcon, Terminal,
  Code, PieChart, LineChart, Map as MapIcon, Wifi, Satellite,
  Smartphone as SmartphoneIcon, CreditCard, Bitcoin, Briefcase
} from 'lucide-react'

interface QueryForm {
  type: string
  value: string
}

interface LiveStat {
  label: string
  value: string
  change: string
  trend: 'up' | 'down'
}

interface RecentScan {
  id: string
  type: string
  query: string
  status: 'completed' | 'running' | 'failed'
  timestamp: string
  confidence: number
  sources: number
}

export default function Home() {
  const [query, setQuery] = useState<QueryForm>({ type: 'email', value: '' })
  const [isScanning, setIsScanning] = useState(false)
  const [results, setResults] = useState<any>(null)
  const [scanId, setScanId] = useState<string | null>(null)
  const [userPlan, setUserPlan] = useState<'free' | 'professional' | 'enterprise'>('free')
  const [dailyQueries, setDailyQueries] = useState({ used: 2, limit: 5 })
  const [currentTime, setCurrentTime] = useState(new Date())
  const [activeDemo, setActiveDemo] = useState(0)
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 })
  const heroRef = useRef<HTMLDivElement>(null)

  // Live statistics simulation
  const [liveStats, setLiveStats] = useState<LiveStat[]>([
    { label: 'Active Scans', value: '847', change: '+12%', trend: 'up' },
    { label: 'Data Sources', value: '1,247', change: '+5%', trend: 'up' },
    { label: 'Queries Today', value: '5,892', change: '+23%', trend: 'up' },
    { label: 'Success Rate', value: '97.8%', change: '+0.3%', trend: 'up' }
  ])

  // Recent scans simulation
  const [recentScans] = useState<RecentScan[]>([
    { id: '1', type: 'email', query: 'john.doe@company.com', status: 'completed', timestamp: '2 min ago', confidence: 94, sources: 12 },
    { id: '2', type: 'phone', query: '+1-555-0123', status: 'running', timestamp: '5 min ago', confidence: 78, sources: 8 },
    { id: '3', type: 'name', query: 'Sarah Johnson', status: 'completed', timestamp: '8 min ago', confidence: 87, sources: 15 },
    { id: '4', type: 'username', query: 'techguru2024', status: 'completed', timestamp: '12 min ago', confidence: 92, sources: 11 }
  ])

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentTime(new Date())
      // Update live stats periodically
      setLiveStats(prev => prev.map(stat => ({
        ...stat,
        value: (parseInt(stat.value.replace(/,/g, '')) + Math.floor(Math.random() * 10)).toLocaleString()
      })))
    }, 5000)

    return () => clearInterval(timer)
  }, [])

  useEffect(() => {
    const handleMouseMove = (e: MouseEvent) => {
      setMousePosition({ x: e.clientX, y: e.clientY })
    }

    window.addEventListener('mousemove', handleMouseMove)
    return () => window.removeEventListener('mousemove', handleMouseMove)
  }, [])

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    if (!query.value.trim()) return

    // Check query limits
    if (dailyQueries.used >= dailyQueries.limit) {
      alert(`Daily query limit reached (${dailyQueries.limit}). Please upgrade your plan or try again tomorrow.`)
      return
    }

    setIsScanning(true)
    
    // Generate scan ID and redirect to progress page
    const newScanId = 'scan_' + Math.random().toString(36).substr(2, 9)
    setScanId(newScanId)
    
    // Update daily usage
    setDailyQueries(prev => ({ ...prev, used: prev.used + 1 }))
    
    // In real implementation, would start actual scan and redirect
    setTimeout(() => {
      window.location.href = `/scan-progress?scanId=${newScanId}`
    }, 1000)
  }

  const scannerTypes = [
    { id: 'email', label: 'Email Intelligence', icon: Mail, description: 'Deep email analysis & verification', color: 'from-blue-500 to-cyan-500' },
    { id: 'phone', label: 'Phone Intelligence', icon: SmartphoneIcon, description: 'Carrier, location & reputation data', color: 'from-green-500 to-emerald-500' },
    { id: 'social', label: 'Social Media', icon: Users, description: 'Cross-platform social analysis', color: 'from-purple-500 to-pink-500' },
    { id: 'blockchain', label: 'Blockchain Analysis', icon: Bitcoin, description: 'Cryptocurrency & DeFi intelligence', color: 'from-orange-500 to-red-500' },
    { id: 'geospatial', label: 'Location Intelligence', icon: MapIcon, description: 'Satellite imagery & geospatial data', color: 'from-indigo-500 to-purple-500' },
    { id: 'image', label: 'Image Analysis', icon: Image, description: 'Reverse image search & forensics', color: 'from-teal-500 to-blue-500' },
  ]

  const capabilities = [
    { icon: Radar, title: '75+ Scanner Tools', description: 'Comprehensive intelligence gathering across all domains' },
    { icon: Brain, title: 'AI-Powered Analysis', description: 'Machine learning enhanced pattern recognition' },
    { icon: ShieldIcon, title: 'Enterprise Security', description: 'Bank-grade encryption and compliance controls' },
    { icon: Zap, title: 'Real-Time Processing', description: 'Lightning-fast results with live progress tracking' },
    { icon: Database, title: 'Multi-Source Aggregation', description: 'Unified intelligence from 1000+ data sources' },
    { icon: Globe, title: 'Global Coverage', description: 'Worldwide data collection and analysis capabilities' }
  ]

  return (
    <div className="min-h-screen bg-black relative overflow-hidden">
      <Head>
        <title>IntelliGather Pro - Advanced Intelligence Platform | OSINT & Threat Intelligence</title>
        <meta name="description" content="Professional-grade intelligence gathering platform with 75+ scanner tools, AI-powered analysis, and real-time threat intelligence for security professionals and investigators." />
        <meta name="keywords" content="OSINT, intelligence gathering, cybersecurity, threat intelligence, blockchain analysis, geospatial intelligence, social media intelligence" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Dynamic Background */}
      <div className="fixed inset-0 z-0">
        <div className="absolute inset-0 bg-gradient-to-br from-slate-900 via-purple-900/30 to-slate-900"></div>
        <div className="absolute inset-0 bg-[radial-gradient(circle_at_50%_50%,rgba(120,119,198,0.1),transparent_50%)]"></div>
        <div 
          className="absolute w-96 h-96 bg-blue-500/10 rounded-full blur-3xl transition-all duration-1000 ease-out"
          style={{
            transform: `translate(${mousePosition.x * 0.02}px, ${mousePosition.y * 0.02}px)`
          }}
        ></div>
        <div 
          className="absolute w-96 h-96 bg-purple-500/10 rounded-full blur-3xl transition-all duration-1000 ease-out"
          style={{
            transform: `translate(${mousePosition.x * -0.01}px, ${mousePosition.y * -0.01}px)`
          }}
        ></div>
        {/* Animated grid */}
        <div className="absolute inset-0 bg-[linear-gradient(rgba(255,255,255,0.02)_1px,transparent_1px),linear-gradient(90deg,rgba(255,255,255,0.02)_1px,transparent_1px)] bg-[size:50px_50px]"></div>
      </div>

      {/* Navigation */}
      <nav className="fixed top-0 w-full z-50 bg-black/20 backdrop-blur-xl border-b border-gray-700/30">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between h-16">
            <div className="flex items-center">
              <div className="flex-shrink-0 flex items-center group cursor-pointer">
                <div className="relative">
                  <Shield className="h-8 w-8 text-blue-400 group-hover:text-blue-300 transition-colors" />
                  <div className="absolute -inset-1 bg-blue-400/20 rounded-full blur-sm opacity-0 group-hover:opacity-100 transition-opacity"></div>
                </div>
                <span className="ml-3 text-xl font-bold text-white">IntelliGather</span>
                <span className="ml-2 text-xs bg-gradient-to-r from-blue-500 to-purple-500 text-white px-2 py-1 rounded-full">PRO</span>
              </div>
              
              <div className="hidden md:flex ml-10 space-x-8">
                <a href="#features" className="text-gray-300 hover:text-white transition-colors">Features</a>
                <a href="#capabilities" className="text-gray-300 hover:text-white transition-colors">Capabilities</a>
                <a href="#pricing" className="text-gray-300 hover:text-white transition-colors">Pricing</a>
                <a href="#docs" className="text-gray-300 hover:text-white transition-colors">Documentation</a>
              </div>
            </div>
            
            <div className="flex items-center space-x-4">
              {/* Live Stats Indicator */}
              <div className="hidden lg:flex items-center space-x-6 mr-6">
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                  <span className="text-xs text-gray-400">Live: {liveStats[0].value} scans</span>
                </div>
                <div className="text-xs text-gray-400">
                  {currentTime.toLocaleTimeString()}
                </div>
              </div>
              
              <div className="flex items-center space-x-2 text-sm text-gray-300">
                <div className="flex items-center space-x-1">
                  <div className="w-8 h-1.5 bg-gray-700 rounded-full overflow-hidden">
                    <div 
                      className="h-full bg-gradient-to-r from-blue-500 to-purple-500 transition-all duration-300"
                      style={{ width: `${(dailyQueries.used / dailyQueries.limit) * 100}%` }}
                    ></div>
                  </div>
                  <span className="text-blue-400 font-medium">{dailyQueries.used}</span>
                  <span>/{dailyQueries.limit}</span>
                </div>
              </div>
              
              <div className="relative group">
                <div className="text-sm bg-gradient-to-r from-blue-600/20 to-purple-600/20 text-blue-300 px-4 py-2 rounded-lg border border-blue-500/30 backdrop-blur-sm cursor-pointer hover:from-blue-600/30 hover:to-purple-600/30 transition-all">
                  {userPlan.charAt(0).toUpperCase() + userPlan.slice(1)}
                  <ChevronDown className="inline-block ml-1 h-3 w-3" />
                </div>
              </div>
              
              <button className="text-gray-300 hover:text-white p-2 rounded-lg hover:bg-white/5 transition-all">
                <Bell className="h-5 w-5" />
              </button>
              
              <button className="text-gray-300 hover:text-white p-2 rounded-lg hover:bg-white/5 transition-all">
                <Settings className="h-5 w-5" />
              </button>
            </div>
          </div>
        </div>
      </nav>

      {/* Hero Section */}
      <div ref={heroRef} className="relative z-10 pt-24 pb-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          {/* Live Stats Bar */}
          <div className="mb-8">
            <div className="flex flex-wrap justify-center gap-6 p-4 bg-black/20 backdrop-blur-sm rounded-2xl border border-gray-700/30">
              {liveStats.map((stat, index) => (
                <div key={index} className="flex items-center space-x-2 text-sm">
                  <div className="text-gray-400">{stat.label}:</div>
                  <div className="text-white font-bold">{stat.value}</div>
                  <div className={`text-xs ${stat.trend === 'up' ? 'text-green-400' : 'text-red-400'}`}>
                    {stat.change}
                  </div>
                </div>
              ))}
            </div>
          </div>

          <div className="text-center mb-12">
            <div className="inline-flex items-center px-4 py-2 bg-gradient-to-r from-blue-500/10 to-purple-500/10 rounded-full border border-blue-500/20 mb-6">
              <Sparkles className="w-4 h-4 text-blue-400 mr-2" />
              <span className="text-sm text-blue-300">Powered by Advanced AI & Machine Learning</span>
            </div>
            
            <h1 className="text-5xl md:text-7xl font-bold text-white mb-6 leading-tight">
              Next-Gen
              <span className="bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent"> Intelligence </span>
              Platform
            </h1>
            
            <p className="text-xl text-gray-300 mb-8 max-w-3xl mx-auto leading-relaxed">
              Professional-grade OSINT and threat intelligence platform with 75+ scanner tools, 
              AI-powered analysis, and real-time insights for security professionals, investigators, and analysts.
            </p>

            <div className="flex flex-wrap justify-center gap-4 mb-12">
              <div className="flex items-center space-x-2 text-gray-300">
                <CheckCircle className="w-5 h-5 text-green-400" />
                <span>Enterprise-Grade Security</span>
              </div>
              <div className="flex items-center space-x-2 text-gray-300">
                <CheckCircle className="w-5 h-5 text-green-400" />
                <span>Real-Time Processing</span>
              </div>
              <div className="flex items-center space-x-2 text-gray-300">
                <CheckCircle className="w-5 h-5 text-green-400" />
                <span>Global Data Coverage</span>
              </div>
            </div>
          </div>

          {/* Main Search Interface */}
          <div className="max-w-4xl mx-auto">
            <div className="bg-black/40 backdrop-blur-xl rounded-3xl border border-gray-700/30 p-8 shadow-2xl">
              <form onSubmit={handleSubmit} className="space-y-6">
                {/* Scanner Type Selection */}
                <div className="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-6 gap-4">
                  {scannerTypes.map((type) => (
                    <div
                      key={type.id}
                      className={`relative group cursor-pointer transition-all duration-300 ${
                        query.type === type.id 
                          ? 'scale-105' 
                          : 'hover:scale-105'
                      }`}
                      onClick={() => setQuery(prev => ({ ...prev, type: type.id }))}
                    >
                      <div className={`p-4 rounded-2xl border-2 transition-all duration-300 ${
                        query.type === type.id
                          ? `bg-gradient-to-br ${type.color} border-transparent shadow-lg`
                          : 'bg-gray-800/50 border-gray-600/30 hover:border-gray-500/50'
                      }`}>
                        <type.icon className={`w-8 h-8 mx-auto mb-2 ${
                          query.type === type.id ? 'text-white' : 'text-gray-400'
                        }`} />
                        <div className={`text-sm font-medium text-center ${
                          query.type === type.id ? 'text-white' : 'text-gray-300'
                        }`}>
                          {type.label}
                        </div>
                        <div className={`text-xs text-center mt-1 ${
                          query.type === type.id ? 'text-white/80' : 'text-gray-500'
                        }`}>
                          {type.description}
                        </div>
                      </div>
                      
                      {query.type === type.id && (
                        <div className="absolute -inset-1 bg-gradient-to-r from-blue-500/20 to-purple-500/20 rounded-2xl blur-lg -z-10"></div>
                      )}
                    </div>
                  ))}
                </div>

                {/* Search Input */}
                <div className="relative">
                  <div className="absolute inset-y-0 left-0 pl-6 flex items-center pointer-events-none">
                    <Search className="h-6 w-6 text-gray-400" />
                  </div>
                  <input
                    type="text"
                    value={query.value}
                    onChange={(e) => setQuery(prev => ({ ...prev, value: e.target.value }))}
                    placeholder={`Enter ${scannerTypes.find(t => t.id === query.type)?.label.toLowerCase() || 'query'} to analyze...`}
                    className="w-full pl-16 pr-32 py-6 bg-gray-800/50 border-2 border-gray-600/30 rounded-2xl text-white placeholder-gray-400 focus:outline-none focus:border-blue-500/50 focus:bg-gray-800/80 transition-all text-lg backdrop-blur-sm"
                    disabled={isScanning}
                  />
                  <button
                    type="submit"
                    disabled={isScanning || !query.value.trim()}
                    className="absolute inset-y-2 right-2 px-8 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl font-medium transition-all hover:from-blue-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2 shadow-lg"
                  >
                    {isScanning ? (
                      <>
                        <div className="w-5 h-5 border-2 border-white/30 border-t-white rounded-full animate-spin"></div>
                        <span>Scanning...</span>
                      </>
                    ) : (
                      <>
                        <Radar className="w-5 h-5" />
                        <span>Start Scan</span>
                      </>
                    )}
                  </button>
                </div>

                {/* Quick Examples */}
                <div className="flex flex-wrap gap-2 justify-center">
                  <span className="text-sm text-gray-400">Try:</span>
                  {[
                    'john.doe@company.com',
                    '+1-555-0123',
                    '@username',
                    '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa'
                  ].map((example, index) => (
                    <button
                      key={index}
                      onClick={() => setQuery(prev => ({ ...prev, value: example }))}
                      className="text-sm px-3 py-1 bg-gray-700/50 hover:bg-gray-600/50 text-gray-300 rounded-full transition-colors"
                    >
                      {example}
                    </button>
                  ))}
                </div>
              </form>

              {/* Recent Scans */}
              {recentScans.length > 0 && (
                <div className="mt-8 pt-6 border-t border-gray-700/30">
                  <h3 className="text-lg font-semibold text-white mb-4 flex items-center">
                    <Clock className="w-5 h-5 mr-2 text-blue-400" />
                    Recent Scans
                  </h3>
                  <div className="space-y-2">
                    {recentScans.slice(0, 3).map((scan) => (
                      <div key={scan.id} className="flex items-center justify-between p-3 bg-gray-800/30 rounded-lg hover:bg-gray-800/50 transition-colors cursor-pointer">
                        <div className="flex items-center space-x-3">
                          <div className={`w-2 h-2 rounded-full ${
                            scan.status === 'completed' ? 'bg-green-400' :
                            scan.status === 'running' ? 'bg-yellow-400 animate-pulse' :
                            'bg-red-400'
                          }`}></div>
                          <div className="text-sm text-gray-300">{scan.query}</div>
                          <div className="text-xs text-gray-500">({scan.type})</div>
                        </div>
                        <div className="flex items-center space-x-2 text-xs text-gray-400">
                          <span>{scan.confidence}% confidence</span>
                          <span>•</span>
                          <span>{scan.sources} sources</span>
                          <span>•</span>
                          <span>{scan.timestamp}</span>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
      description: 'End-to-end encryption and secure data handling'
    }
  ]

  return (
    <>
      <Head>
        <title>Intelligence Gathering Platform - 100+ Scanner Tools</title>
        <meta name="description" content="Professional intelligence gathering platform with 100+ scanner tools for comprehensive OSINT research" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="min-h-screen bg-gradient-to-br from-dark-900 via-dark-800 to-primary-900">
        {/* Header */}
        <header className="bg-dark-900/50 backdrop-blur-sm border-b border-gray-700">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center py-6">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-primary-600 rounded-lg flex items-center justify-center">
                  <Search className="w-6 h-6 text-white" />
                </div>
                <div>
                  <h1 className="text-xl font-bold text-white">Intelligence Platform</h1>
                  <p className="text-gray-400 text-sm">100+ Scanner Tools</p>
                </div>
              </div>
              <nav className="flex space-x-6">
                <a href="#" className="text-gray-300 hover:text-white transition-colors">Dashboard</a>
                <a href="#" className="text-gray-300 hover:text-white transition-colors">Reports</a>
                <a href="/subscription" className="text-gray-300 hover:text-white transition-colors">Pricing</a>
                <a href="#" className="text-gray-300 hover:text-white transition-colors">API</a>
                <button className="btn-primary">
                  Login
                </button>
              </nav>
            </div>
          </div>
        </header>

        {/* Hero Section */}
        <section className="py-20">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
            <h1 className="text-5xl font-bold text-white mb-6">
              Professional Intelligence Gathering
            </h1>
            <p className="text-xl text-gray-300 mb-8 max-w-3xl mx-auto">
              Comprehensive OSINT research with 100+ scanner tools. Gather intelligence from 
              social media, public records, APIs, and more - all in one platform.
            </p>
            
            {/* Query Usage Stats */}
            <div className="max-w-2xl mx-auto mb-8">
              <div className="bg-white/10 backdrop-blur-sm rounded-lg p-4 border border-gray-600">
                <div className="flex justify-between items-center mb-2">
                  <span className="text-white font-medium">Daily Queries</span>
                  <span className="text-white font-bold">{dailyQueries.used}/{dailyQueries.limit}</span>
                </div>
                <div className="w-full bg-gray-700 rounded-full h-2">
                  <div 
                    className={`h-2 rounded-full transition-all duration-300 ${
                      dailyQueries.used >= dailyQueries.limit ? 'bg-red-500' : 
                      dailyQueries.used / dailyQueries.limit > 0.8 ? 'bg-yellow-500' : 'bg-green-500'
                    }`}
                    style={{ width: `${Math.min((dailyQueries.used / dailyQueries.limit) * 100, 100)}%` }}
                  ></div>
                </div>
                <div className="flex justify-between items-center mt-2 text-sm">
                  <span className="text-gray-400">
                    Plan: <span className="text-white capitalize">{userPlan}</span>
                  </span>
                  {dailyQueries.used >= dailyQueries.limit * 0.8 && (
                    <a href="/subscription" className="text-primary-400 hover:text-primary-300">
                      Upgrade Plan
                    </a>
                  )}
                </div>
              </div>
            </div>
            
            {/* Search Form */}
            <div className="max-w-2xl mx-auto">
              <form onSubmit={handleSubmit} className="space-y-6">
                <div className="grid grid-cols-5 gap-2 mb-4">
                  {scannerTypes.map((type) => (
                    <button
                      key={type.id}
                      type="button"
                      onClick={() => setQuery({ ...query, type: type.id })}
                      className={`p-3 rounded-lg border transition-all ${
                        query.type === type.id
                          ? 'bg-primary-600 border-primary-500 text-white'
                          : 'bg-white/10 border-gray-600 text-gray-300 hover:bg-white/20'
                      }`}
                    >
                      <div className="text-2xl mb-1">{type.icon}</div>
                      <div className="text-xs">{type.label}</div>
                    </button>
                  ))}
                </div>
                
                <div className="flex space-x-3">
                  <input
                    type="text"
                    value={query.value}
                    onChange={(e) => setQuery({ ...query, value: e.target.value })}
                    placeholder={`Enter ${scannerTypes.find(t => t.id === query.type)?.label.toLowerCase()} to investigate...`}
                    className="flex-1 px-4 py-3 rounded-lg bg-white/10 border border-gray-600 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                    disabled={isScanning}
                  />
                  <button
                    type="submit"
                    disabled={isScanning || !query.value.trim()}
                    className="btn-primary px-8 py-3 text-lg disabled:opacity-50"
                  >
                    {isScanning ? (
                      <div className="flex items-center space-x-2">
                        <div className="w-5 h-5 border-2 border-white/20 border-t-white rounded-full animate-spin"></div>
                        <span>Scanning...</span>
                      </div>
                    ) : (
                      'Start Scan'
                    )}
                  </button>
                </div>
              </form>
            </div>

            {/* Scanning Progress */}
            {isScanning && (
              <div className="mt-8 max-w-2xl mx-auto">
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-6 border border-gray-600">
                  <div className="flex items-center justify-center space-x-3 mb-4">
                    <div className="w-8 h-8 border-2 border-primary-500/20 border-t-primary-500 rounded-full animate-spin"></div>
                    <span className="text-white font-medium">Running 100+ scanner tools...</span>
                  </div>
                  <div className="w-full bg-gray-700 rounded-full h-2">
                    <div className="bg-gradient-to-r from-primary-500 to-blue-500 h-2 rounded-full animate-pulse" style={{width: '70%'}}></div>
                  </div>
                  <div className="mt-3 text-sm text-gray-400 text-center">
                    Checking social media, public records, APIs, and more...
                  </div>
                </div>
              </div>
            )}

            {/* Results Preview */}
            {results && !isScanning && (
              <div className="mt-8 max-w-4xl mx-auto">
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-6 border border-gray-600">
                  <div className="text-center mb-6">
                    <h3 className="text-2xl font-bold text-white mb-2">Scan Complete!</h3>
                    <p className="text-gray-300">Found intelligence data from {results.sources_found} sources</p>
                  </div>
                  
                  <div className="grid md:grid-cols-3 gap-6 mb-6">
                    <div className="text-center">
                      <div className="text-3xl font-bold text-primary-400">{results.scanners_used}</div>
                      <div className="text-gray-400">Scanners Used</div>
                    </div>
                    <div className="text-center">
                      <div className="text-3xl font-bold text-green-400">{results.sources_found}</div>
                      <div className="text-gray-400">Sources Found</div>
                    </div>
                    <div className="text-center">
                      <div className="text-3xl font-bold text-yellow-400">{Math.round(results.confidence_score * 100)}%</div>
                      <div className="text-gray-400">Confidence</div>
                    </div>
                  </div>

                  <div className="grid md:grid-cols-2 gap-4 text-left">
                    <div className="bg-black/20 rounded-lg p-4">
                      <h4 className="font-semibold text-white mb-2">Social Profiles</h4>
                      <p className="text-gray-300">{results.preview_data.social_profiles} profiles found</p>
                    </div>
                    <div className="bg-black/20 rounded-lg p-4">
                      <h4 className="font-semibold text-white mb-2">Public Records</h4>
                      <p className="text-gray-300">{results.preview_data.public_records} records found</p>
                    </div>
                    <div className="bg-black/20 rounded-lg p-4">
                      <h4 className="font-semibold text-white mb-2">Email Status</h4>
                      <p className="text-gray-300 capitalize">{results.preview_data.email_verification}</p>
                    </div>
                    <div className="bg-black/20 rounded-lg p-4">
                      <h4 className="font-semibold text-white mb-2">Location</h4>
                      <p className="text-gray-300">{results.preview_data.location}</p>
                    </div>
                  </div>

                  <div className="mt-6 text-center">
                    <p className="text-gray-400 mb-4">This is a preview. Upgrade for full detailed reports.</p>
                    <div className="space-x-3">
                      <button className="btn-primary">
                        Get Full Report ($9.99)
                      </button>
                      <button className="btn-secondary">
                        Download Preview
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>
        </section>

        {/* Features Section */}
        <section className="py-20 bg-black/20">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-16">
              <h2 className="text-3xl font-bold text-white mb-4">Comprehensive Intelligence Platform</h2>
              <p className="text-xl text-gray-300 max-w-3xl mx-auto">
                Powered by 100+ scanner tools and integrated with leading intelligence sources
              </p>
            </div>

            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              {features.map((feature, index) => (
                <div key={index} className="text-center">
                  <div className="w-16 h-16 bg-primary-600/10 rounded-full flex items-center justify-center mx-auto mb-4">
                    {feature.icon}
                  </div>
                  <h3 className="text-xl font-semibold text-white mb-2">{feature.title}</h3>
                  <p className="text-gray-400">{feature.description}</p>
                </div>
              ))}
            </div>

            {/* Scanner Categories */}
            <div className="mt-20">
              <h3 className="text-2xl font-bold text-white text-center mb-12">Scanner Categories</h3>
              <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
                {[
                  { name: 'Social Media', count: 20, icon: '📱' },
                  { name: 'Email Intelligence', count: 15, icon: '📧' },
                  { name: 'Public Records', count: 25, icon: '📋' },
                  { name: 'Phone Lookup', count: 10, icon: '☎️' },
                  { name: 'Search Engines', count: 15, icon: '🔍' },
                  { name: 'Image Analysis', count: 15, icon: '🖼️' },
                  { name: 'Network Intel', count: 8, icon: '🌐' },
                  { name: 'AI Correlation', count: 5, icon: '🤖' }
                ].map((category, index) => (
                  <div key={index} className="bg-white/5 rounded-lg p-6 border border-gray-700 hover:bg-white/10 transition-colors">
                    <div className="text-3xl mb-3">{category.icon}</div>
                    <h4 className="font-semibold text-white mb-1">{category.name}</h4>
                    <p className="text-gray-400">{category.count} tools</p>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </section>

        {/* Footer */}
        <footer className="bg-dark-900 py-12">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="text-center">
              <div className="flex items-center justify-center space-x-3 mb-4">
                <div className="w-8 h-8 bg-primary-600 rounded-lg flex items-center justify-center">
                  <Search className="w-5 h-5 text-white" />
                </div>
                <span className="text-xl font-bold text-white">Intelligence Platform</span>
              </div>
              <p className="text-gray-400 mb-4">
                Professional intelligence gathering with 100+ scanner tools
              </p>
              <div className="flex justify-center space-x-6 text-sm text-gray-400">
                <a href="#" className="hover:text-white transition-colors">Privacy Policy</a>
                <a href="#" className="hover:text-white transition-colors">Terms of Service</a>
                <a href="#" className="hover:text-white transition-colors">API Documentation</a>
                <a href="#" className="hover:text-white transition-colors">Support</a>
              </div>
              <p className="text-gray-500 text-sm mt-4">
                © 2024 Intelligence Platform. All rights reserved.
              </p>
            </div>
          </div>
        </footer>
      </div>
    </div>
    </>
  )
}